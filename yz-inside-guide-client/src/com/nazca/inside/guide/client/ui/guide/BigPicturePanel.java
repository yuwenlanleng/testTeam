/*
 * BigPicturePanel.java
 * 
 * Copyright(c) 2007-2016 by Yingzhi Tech
 * All Rights Reserved
 * 
 * Created at 2016-10-24 09:52:06
 */
package com.nazca.inside.guide.client.ui.guide;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
/**
 *
 * @author pengruirui
 */
public class BigPicturePanel extends javax.swing.JFrame {
    private  BufferedImage imgs = null; 
    private int width=30;
    private int height=30;
    private URL url=this.getClass().getResource("/com/nazca/inside/guide/client/ui/res/logo-16.png");
    private Image image;

    /**
     * Creates new form BigPicturePanel
     */
    public BigPicturePanel() throws IOException {
        super();
        this.image = ImageIO.read(url);
        initComponents();
        initAgentAndListener();   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manPicPane = new com.nazca.ui.NImagePanel();

        setLayout(new java.awt.BorderLayout());
        add(manPicPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.nazca.ui.NImagePanel manPicPane;
    // End of variables declaration//GEN-END:variables

    private void initAgentAndListener() {
        manPicPane.addMouseWheelListener(new MouseWheelListener() {
            @Override
            public void mouseWheelMoved(MouseWheelEvent e) {
                width+=e.getWheelRotation()*10;
                height+=e.getWheelRotation()*10;
            }
        });
    }
    protected void paintComponent(Graphics g){
       g.drawImage(imgs, width, height, null);
    }
    public void getPicture(BufferedImage imgs) {
       this.imgs=imgs;  
       manPicPane.setImage(imgs);      
        }  
    public void edit(String title, int width, int height) {
        this.setSize(300, 300);
        this.setTitle("查看图片");
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        this.setIconImage(image);
    }
}
